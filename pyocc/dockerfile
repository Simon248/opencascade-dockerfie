FROM ubuntu:22.04

USER root

ENV DEBIAN_FRONTEND=noninteractive

##############
# apt update #
##############
RUN apt-get update
RUN apt-get install -y wget git build-essential libgl1-mesa-dev libfreetype6-dev libglu1-mesa-dev libzmq3-dev libsqlite3-dev libicu-dev python3-dev libgl2ps-dev libfreeimage-dev libtbb-dev ninja-build bison autotools-dev automake libpcre3 libpcre3-dev tcl8.6 tcl8.6-dev tk8.6 tk8.6-dev libxmu-dev libxi-dev libopenblas-dev libboost-all-dev libxml2-dev cmake rapidjson-dev
RUN apt-get install -y swig 
#=4.0.2
RUN dpkg-reconfigure --frontend noninteractive tzdata


############################################################
# OCCT 7.5.3                                               #
# Download the official source package from git repository #
############################################################
RUN mkdir /opt/build
COPY opencascade-7.7.0.tgz /opt/build

WORKDIR /opt/build


# RUN wget 'https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=fecb042498514186bd37fa621cdcf09eb61899a3;sf=tgz' -O occt-fecb042.tar.gz
RUN tar -zxvf opencascade-7.7.0.tgz 
#>> extracted_occt753_files.txt


RUN mkdir /opt/build/opencascade-7.7.0/build

WORKDIR /opt/build/opencascade-7.7.0/build

# RUN ls /opt/build/opencascade-7.7.0

RUN cmake -G Ninja \
 -DINSTALL_DIR=/opt/build/opencascade-7.7.0 \
 -DBUILD_RELEASE_DISABLE_EXCEPTIONS=OFF \
 ..
RUN sed -i '1i#include <limits>' /opt/build/opencascade-7.7.0/src/ViewerTest/ViewerTest_CmdParser.cxx
RUN ninja install

RUN echo "/opt/build/opencascade-7.7.0/lib" >> /etc/ld.so.conf.d/occt.conf
RUN ldconfig

# #############
# # pythonocc #
# #############
WORKDIR /opt/build
RUN git clone https://github.com/tpaviot/pythonocc-core
WORKDIR /opt/build/pythonocc-core
RUN git checkout 7.7.0
WORKDIR /opt/build/pythonocc-core/build

RUN cmake \
 -DOCE_INCLUDE_PATH=/opt/build/opencascade-7.7.0/include/opencascade \
 -DOCE_LIB_PATH=/opt/build/opencascade-7.7.0/lib \
 -DPYTHONOCC_BUILD_TYPE=Release \
 ..

RUN make -j5 && make install 

# ############
# # svgwrite #
# ############
RUN apt-get -y install pip
RUN pip install svgwrite

# #######################
# # Run pythonocc tests #
# #######################
WORKDIR /opt/build/pythonocc-core/test
RUN pip install six
RUN python3 core_wrapper_features_unittest.py

# ##############################
# # Install pythonocc examples #
# ##############################
# #WORKDIR /opt/build/
# #RUN git clone https://github.com/tpaviot/pythonocc-demos
# #WORKDIR /opt/build/pythonocc-demos
# #RUN cp -r /opt/build/pythonocc-demos/assets /home/jovyan/work
# #RUN cp -r /opt/build/pythonocc-demos/jupyter_notebooks /home/jovyan/work

# ########
# # gmsh #
# ########
ENV CASROOT=/opt/build/opencascade-7.7.0
WORKDIR /opt/build
RUN git clone https://gitlab.onelab.info/gmsh/gmsh
WORKDIR /opt/build/gmsh
RUN git checkout gmsh_4_9_0
WORKDIR /opt/build/gmsh/build

RUN cmake \
 -DCMAKE_BUILD_TYPE=RelWithDebInfo \
 -DENABLE_OCC=ON \
 -DENABLE_OCC_CAF=ON \
 -DCMAKE_INSTALL_PREFIX=/usr/local \
 ..

RUN make -j6 && make install
